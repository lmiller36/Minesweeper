{"version":3,"sources":["actions.js","Constants.js","reducers.js","store.js","selectors.js","Timer.js","StatusBar.js","Minesweeper/ImageUrls.js","Minesweeper/TileImageFactory.js","Minesweeper/Tile.js","Minesweeper/Minesweeper.js","utils.js","Game.js","GameDisplay.js","MainMenu.js","Logo.js","NewGameMenu.js","App.js","index.js"],"names":["toggleGameMode","now","type","payload","setGameDifficulty","difficulty","EASY","rows","cols","numBombs","MEDIUM","HARD","DIFFICULTIES","initialState","game","board","isSet","reducers","data","state","action","console","log","inSetupMode","inMainMenu","inGame","update","shouldRerender","startTime","gameMode","timerInterval","newMode","persistConfig","key","storage","stateReconciler","autoMergeLevel2","rootReducer","combineReducers","persistedReducer","persistReducer","getBoard","plsRerender","getGame","getIsSet","getStartTime","getCurrentTime","getGameMode","getGameDifficulty","getGameInSetupMode","getInGame","getInMainMenu","TimerWrapper","styled","div","connect","actualStartTime","timeElapsed","seconds","isNaN","Math","round","ModeWrapper","RemainingBombs","StatusBarWrapper","props","size","icon","faHome","onClick","remaining","faFlag","faMousePointer","faRedo","localRemoveCachedBoard","selectedValue","gameDifficultySelector","document","querySelectorAll","difficultyOption","checked","value","gameDifficulty","HINT_TILES","BombImage","this","url","OpenedImage","FlaggedImage","UnopenedImage","timeImageFactory","createImage","tile","isOpened","isFlagged","TileImage","TileWrapper","Tile","click","style","position","display","zIndex","left","top","opacity","bombTile","safeTile","isBomb","genNonBombs","numTiles","includeIndex","toInsert","tiles","count","push","index","MinesweeperGame","initialClick","bombs","nonBombs","opened","Set","createBoard","clickTile","pos","indexToPos","totalTiles","genBombs","numSafe","isCorner","isOnAnEdge","randomSafe","randomizeBoard","arr","i","length","j","floor","random","shuffle","concat","finishedBoard","Array","map","fill","iterateOverNeighbors","coords","y","x","iterateOverRowsCols","row","col","posToArrIndex","calculateBombNumberForEachTile","callback","xDelta","yDelta","numEdgesOfPos","right","bottom","total","trunc","openNonBombNeighbors","curr","flaggedState","numFlagged","tileToOpen","neighborsWithFlags","indexWithinBounds","has","add","alert","decrementUsed","stop","emptyBoard","first","rerender","dispatch","performInitialSetup","newGame","updateBoard","removeCachedBoard","setStartTime","interval","initializeTimer","updateTimer","setDifficulty","newDifficulty","GameWrapper","window","addEventListener","event","visibleBoard","isClicked","openNeighbors","unopenedTileClick","flagTile","flagClick","setInterval","Date","clearInterval","initialTileClick","setupNewGame","continueGame","MainMenuContainer","continuePreviousGame","LogoContainer","LogoText","p","Logo","NewGameMenuContainer","Object","keys","s","msg","charAt","toUpperCase","slice","toLowerCase","id","name","htmlFor","App","pageLoadedSetup","className","React","Component","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","getElementById"],"mappings":"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","file":"static/js/main.d596c3f9.chunk.js","sourcesContent":["export const PAGE_LOADED_SETUP = 'PAGE_LOADED_SETUP';\r\nexport const pageLoadedSetup = () => ({\r\n    type: PAGE_LOADED_SETUP,\r\n    payload: {},\r\n});\r\n\r\n\r\nexport const INITIALIZE_BOARD = 'INITIALIZE_BOARD';\r\nexport const initializeBoard = (game) => ({\r\n    type: INITIALIZE_BOARD,\r\n    payload: { game },\r\n});\r\n\r\nexport const UPDATE_BOARD = 'UPDATE_BOARD';\r\nexport const updateBoard = (game) => ({\r\n    type: UPDATE_BOARD,\r\n    payload: { game },\r\n});\r\n\r\n\r\nexport const REMOVE_CACHED_BOARD = 'REMOVE_CACHED_BOARD';\r\nexport const removeCachedBoard = () => ({\r\n    type: REMOVE_CACHED_BOARD,\r\n    payload: { },\r\n});\r\n\r\nexport const INITILIZE_TIMER = 'INITILIZE_TIMER';\r\nexport const initializeTimer = (startTime) => ({\r\n    type: INITILIZE_TIMER,\r\n    payload: {startTime},\r\n});\r\n\r\nexport const UPDATE_TIMER = 'UPDATE_TIMER';\r\nexport const updateTimer = (now) => ({\r\n    type: UPDATE_TIMER,\r\n    payload: {now},\r\n});\r\n\r\nexport const TOGGLE_GAME_MODE = 'TOGGLE_GAME_MODE';\r\nexport const toggleGameMode = (now) => ({\r\n    type: TOGGLE_GAME_MODE,\r\n    payload: {now},\r\n});\r\n\r\nexport const SET_GAME_DIFFICULTY = 'SET_GAME_DIFFICULTY';\r\nexport const setGameDifficulty = (difficulty) => ({\r\n    type: SET_GAME_DIFFICULTY,\r\n    payload: {difficulty},\r\n});\r\n\r\nexport const SETUP_NEW_GAME = 'SETUP_NEW_GAME';\r\nexport const setupNewGame = () => ({\r\n    type: SETUP_NEW_GAME,\r\n    payload: {},\r\n});\r\n\r\nexport const CONTINUE_GAME = 'CONTINUE_GAME';\r\nexport const continueGame = () => ({\r\n    type: CONTINUE_GAME,\r\n    payload: {},\r\n});\r\n\r\n\r\n\r\n","\r\nexport const EASY = {\r\n    rows: 9,\r\n    cols: 9,\r\n    numBombs: 10,\r\n};\r\n\r\nexport const MEDIUM = {\r\n    rows: 16,\r\n    cols: 16,\r\n    numBombs: 40,\r\n};\r\n\r\nexport const HARD = {\r\n    rows: 30,\r\n    cols: 16,\r\n    numBombs: 99,\r\n};\r\n\r\nexport const DIFFICULTIES = {\r\n    \"EASY\": EASY,\r\n    \"MEDIUM\": MEDIUM,\r\n    \"HARD\": HARD,\r\n}\r\n\r\n// Page States\r\nexport const MAIN_MENU = \"MAIN_MENU\";\r\nexport const SETUP_NEW_GAME = \"SETUP_NEW_GAME\";\r\nexport const IN_GAME_FIRST_CLICK = \"IN_GAME_FIRST_CLICK\";\r\nexport const IN_GAME = \"IN_GAME\";","import {\r\n    INITIALIZE_BOARD,\r\n    REMOVE_CACHED_BOARD,\r\n    UPDATE_BOARD,\r\n    INITILIZE_TIMER,\r\n    UPDATE_TIMER,\r\n    TOGGLE_GAME_MODE,\r\n    SET_GAME_DIFFICULTY,\r\n    SETUP_NEW_GAME,\r\n    PAGE_LOADED_SETUP,\r\n    CONTINUE_GAME,\r\n} from './actions';\r\nimport { EASY } from './Constants';\r\n\r\n\r\n\r\nconst initialState = { difficulty: EASY, game: { board: [], isSet: false } };\r\n\r\nexport const data = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    console.log(type);\r\n\r\n    switch (type) {\r\n        case PAGE_LOADED_SETUP: {\r\n            return {\r\n                ...state,\r\n                inSetupMode: false,\r\n                inMainMenu: true,\r\n                inGame: false,\r\n            }\r\n        }\r\n\r\n        case INITIALIZE_BOARD: {\r\n            const { game } = payload;\r\n            const board = game.board;\r\n\r\n            return {\r\n                ...state,\r\n                game: game,\r\n                board: board,\r\n                isSet: true,\r\n                update: 0,\r\n                shouldRerender: 0,\r\n                now: null,\r\n                startTime: null,\r\n                gameMode: 'clicking',\r\n                timerInterval: null,\r\n            };\r\n        }\r\n\r\n        case UPDATE_BOARD: {\r\n            const { game } = payload;\r\n\r\n            return {\r\n                ...state,\r\n                shouldRerender: state.shouldRerender + 1,\r\n                board: game,\r\n            };\r\n        }\r\n\r\n        case INITILIZE_TIMER: {\r\n            const { startTime, timerInterval } = payload;\r\n\r\n            return {\r\n                ...state,\r\n                now: startTime,\r\n                startTime: startTime,\r\n                timerInterval: timerInterval,\r\n            };\r\n        }\r\n\r\n        case UPDATE_TIMER: {\r\n            const { now } = payload;\r\n\r\n            return {\r\n                ...state,\r\n                now: now,\r\n            };\r\n        }\r\n\r\n        case REMOVE_CACHED_BOARD: {\r\n\r\n            return {\r\n                ...state,\r\n                timerInterval: null,\r\n                now: null,\r\n                isSet: false,\r\n                startTime: null,\r\n                game: {\r\n                    board: []\r\n                },\r\n                difficulty: EASY,\r\n            };\r\n        }\r\n        case TOGGLE_GAME_MODE: {\r\n            const newMode = state.gameMode === 'clicking' ? 'flagging' : 'clicking';\r\n\r\n            return {\r\n                ...state,\r\n                gameMode: newMode,\r\n            };\r\n        }\r\n        case SET_GAME_DIFFICULTY: {\r\n            const { difficulty } = payload;\r\n            return {\r\n                ...state,\r\n                difficulty: difficulty,\r\n                inSetupMode: false,\r\n                inMainMenu: false,\r\n                inGame: true,\r\n            };\r\n        }\r\n        case SETUP_NEW_GAME: {\r\n            return {\r\n                ...state,\r\n                inSetupMode: true,\r\n                inMainMenu: false,\r\n                inGame: false,\r\n            }\r\n        }\r\n        case CONTINUE_GAME: {\r\n            return {\r\n                ...state,\r\n                inSetupMode: false,\r\n                inMainMenu: false,\r\n                inGame: true,\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { data } from './reducers';\r\n\r\nconst reducers = {\r\n    data,\r\n};\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n}\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const configureStore = () =>\r\n    createStore(\r\n        persistedReducer,\r\n        composeWithDevTools(\r\n            applyMiddleware(thunk)\r\n        )\r\n    );","export const getBoard = (state) => {\r\n    return state.data.board;\r\n};\r\n\r\nexport const plsRerender = (state) => {\r\n    return state.data.shouldRerender;\r\n};\r\n\r\nexport const getGame = (state) => {\r\n    return state.data.game;\r\n};\r\n\r\nexport const getIsSet = (state) => {\r\n    return state.data.isSet;\r\n};\r\n\r\nexport const getStartTime = (state) => {\r\n    return state.data.startTime;\r\n};\r\n\r\nexport const getCurrentTime = (state) => {\r\n    return state.data.now;\r\n};\r\n\r\nexport const getGameMode = (state) => {\r\n    return state.data.gameMode;\r\n};\r\n\r\nexport const getGameDifficulty = (state) => {\r\n    return state.data.difficulty;\r\n};\r\n\r\nexport const getGameInSetupMode = (state) => {\r\n    return state.data.inSetupMode;\r\n}\r\n\r\nexport const getInGame = (state) => {\r\n    return state.data.inGame;\r\n}\r\n\r\nexport const getInMainMenu = (state) => {\r\n    // console.log(state.data.inMainMenu)\r\n    return state.data.inMainMenu;\r\n}\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getStartTime,\r\n    getCurrentTime,\r\n} from './selectors';\r\n\r\nconst TimerWrapper = styled.div``;\r\n\r\nconst Timer = (startTime) => {\r\n    const actualStartTime = startTime.startTime;\r\n    const now = startTime.now;\r\n    const milliseconds = 1000;\r\n    const timeElapsed = now - actualStartTime;\r\n\r\n    let seconds = 0;\r\n\r\n    if (!isNaN(seconds)) {\r\n        seconds = Math.round(timeElapsed / milliseconds);\r\n    }\r\n\r\n    return <TimerWrapper>{seconds}</TimerWrapper>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    startTime: getStartTime(state),\r\n    now: getCurrentTime(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Timer);","/* eslint-disable complexity */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport { faMousePointer, faFlag, faRedo, faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    getBoard,\r\n    getGame,\r\n    getGameMode,\r\n\r\n} from './selectors';\r\nimport Timer from './Timer';\r\nimport { EASY, MEDIUM, HARD } from './Constants';\r\n\r\nconst ModeWrapper = styled.div`\r\n`;\r\n\r\nconst RemainingBombs = styled.div`\r\n`;\r\n\r\nconst StatusBarWrapper = styled.div`\r\n    display:flex;\r\n    margin:15px;\r\n    justify-content: space-around;\r\n`;\r\n\r\nconst StatusBar = (\r\n    props,\r\n) => {\r\n\r\n    return <StatusBarWrapper>\r\n        <FontAwesomeIcon size='2x' icon={faHome} onClick={() => { }} />\r\n        <Timer />\r\n        <RemainingBombs>{props.game.remaining}</RemainingBombs>\r\n\r\n        <ModeWrapper >\r\n            <FontAwesomeIcon\r\n                size='2x'\r\n                icon={props.gameMode === 'flagging' ? faFlag : faMousePointer}\r\n                onClick={\r\n                    () => {\r\n                        props.toggleGameMode();\r\n                    }\r\n                }\r\n            />\r\n        </ModeWrapper>\r\n\r\n        <FontAwesomeIcon size='2x' icon={faRedo} onClick={() => {\r\n            console.log(props);\r\n            props.localRemoveCachedBoard();\r\n\r\n            const gameDifficultySelector = document.querySelectorAll('input[name=\\'gameDifficulty\\']');\r\n            let selectedValue;\r\n            for (const difficultyOption of gameDifficultySelector) {\r\n                if (difficultyOption.checked) {\r\n                    selectedValue = difficultyOption.value;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let gameDifficulty = EASY;\r\n\r\n            if (selectedValue === 'medium') {\r\n                gameDifficulty = MEDIUM;\r\n            } else if (selectedValue === 'hard') {\r\n                gameDifficulty = HARD;\r\n            }\r\n\r\n            props.setGameDifficulty(gameDifficulty);\r\n\r\n        }} />\r\n\r\n    </StatusBarWrapper>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    board: getBoard(state),\r\n    // isSet: getIsSet(state),\r\n    game: getGame(state),\r\n    // rerender: plsRerender(state),\r\n    gameMode: getGameMode(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(StatusBar);","/* eslint-disable max-len */\r\nexport const BOMB_TILE = 'https://apprecs.org/ios/images/app-icons/256/e7/451931111.jpg';\r\nexport const HINT_TILES = [\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Minesweeper_0.svg/2000px-Minesweeper_0.svg.png',\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/c/ca/Minesweeper_1.svg/2000px-Minesweeper_1.svg.png',\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/4/44/Minesweeper_2.svg/2000px-Minesweeper_2.svg.png',\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Minesweeper_3.svg/2000px-Minesweeper_3.svg.png',\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Minesweeper_4.svg/2000px-Minesweeper_4.svg.png',\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Minesweeper_5.svg/2000px-Minesweeper_5.svg.png',\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/c/cc/Minesweeper_6.svg/2000px-Minesweeper_6.svg.png',\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/5/56/Minesweeper_7.svg/2000px-Minesweeper_7.svg.png',\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/Minesweeper_8.svg/2000px-Minesweeper_8.svg.png',\r\n];\r\n\r\nexport const FLAG_TILE = 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Minesweeper_flag.svg/2000px-Minesweeper_flag.svg.png';\r\nexport const UNOPENED_TILE = 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c7/Minesweeper_unopened_square.svg/1024px-Minesweeper_unopened_square.svg.png';","/* eslint-disable complexity */\r\n/* eslint-disable func-style */\r\n\r\nimport styled from 'styled-components';\r\nimport { BOMB_TILE, HINT_TILES, FLAG_TILE, UNOPENED_TILE } from './ImageUrls';\r\n\r\nconst BombImage = function () {\r\n    this.url = BOMB_TILE;\r\n};\r\n\r\nconst OpenedImage = function (numBombs) {\r\n    this.url = HINT_TILES[numBombs];\r\n};\r\n\r\nconst FlaggedImage = function () {\r\n    this.url = FLAG_TILE;\r\n};\r\n\r\nconst UnopenedImage = function () {\r\n    this.url = UNOPENED_TILE;\r\n};\r\n\r\nfunction TileImageFactory() {\r\n    this.createImage = function (tile) {\r\n        let image;\r\n\r\n        if (tile.isOpened && tile.type === 'bomb') {\r\n            image = new BombImage();\r\n        } else if (tile.isOpened) {\r\n            image = new OpenedImage(tile.numBombs);\r\n        } else if (tile.isFlagged) {\r\n            image = new FlaggedImage();\r\n        } else {\r\n            image = new UnopenedImage();\r\n        }\r\n\r\n        return image.url;\r\n    };\r\n}\r\n\r\nconst timeImageFactory = new TileImageFactory();\r\n\r\nconst TileImage = styled.div`\r\ncontent: url(${(props) => {\r\n        return timeImageFactory.createImage(props.tile);\r\n    }});\r\n    width: 50px;\r\n    height: 50px;\r\n`;\r\n\r\nexport default TileImage;","/* eslint-disable func-style */\r\n/* eslint-disable no-magic-numbers */\r\n/* eslint-disable complexity */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { faFlag } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport TileImage from './TileImageFactory';\r\n\r\nconst TileWrapper = styled.div`\r\n    position:relative;\r\n    width: 50px;\r\n    height: 50px;\r\n`;\r\n\r\nconst Tile = ({ tile, gameMode, click }) => {\r\n    return <TileWrapper\r\n        onClick={() => {\r\n            click(tile);\r\n        }}>\r\n\r\n        <TileImage style={{ position: 'absolute' }} tile={tile} />\r\n        <FontAwesomeIcon size='2x' style={{\r\n            display: `${gameMode === 'flagging' && !tile.isOpened && !tile.isFlagged ? '' : 'none'}`,\r\n            zIndex: '20',\r\n            position: 'absolute',\r\n            left: '10',\r\n            top: '10',\r\n            opacity: '.6'\r\n        }} icon={faFlag} />\r\n    </TileWrapper>;\r\n};\r\n\r\nexport default Tile;","/* eslint-disable complexity */\r\nimport { shuffle } from '../utils';\r\n\r\nconst bombTile = {\r\n    type: 'bomb',\r\n};\r\n\r\nconst safeTile = {\r\n    type: 'safe',\r\n};\r\n\r\nfunction isBomb(tile) {\r\n    return tile.type === 'bomb';\r\n}\r\n\r\nclass MinesweeperGame {\r\n    constructor(gameDifficulty, initialClick) {\r\n        const { rows, cols, numBombs } = gameDifficulty;\r\n        this.rows = rows;\r\n        this.cols = cols;\r\n        this.bombs = numBombs;\r\n        this.nonBombs = (rows * cols) - numBombs;\r\n        this.remaining = (rows * cols) - numBombs;\r\n        this.opened = new Set();\r\n        if (this.bombs === 0) {\r\n            this.board = genNonBombs(rows * cols);\r\n        } else {\r\n            this.board = this.createBoard(gameDifficulty, initialClick);\r\n            this.clickTile(this.board[initialClick]);\r\n        }\r\n    }\r\n\r\n    createBoard(gameDifficulty, initialClick) {\r\n        const { rows, cols, numBombs } = gameDifficulty;\r\n\r\n        const pos = this.indexToPos(initialClick, cols);\r\n        const totalTiles = rows * cols;\r\n        const bombs = genBombs(numBombs);\r\n\r\n        let numSafe = 9;\r\n\r\n        if (this.isCorner(pos, rows, cols)) {\r\n            numSafe = 4;\r\n        } else if (this.isOnAnEdge(pos, rows, cols)) {\r\n            numSafe = 6;\r\n        }\r\n\r\n        const randomSafe = genNonBombs(totalTiles - numSafe - numBombs, safeTile);\r\n        const randomizeBoard = shuffle(bombs.concat(randomSafe));\r\n\r\n        const finishedBoard = [...Array(rows)].map(() => Array(cols).fill(0));\r\n\r\n        this.iterateOverNeighbors(pos, (coords) => {\r\n            finishedBoard[coords.y][coords.x] = safeTile;\r\n        });\r\n\r\n        let index = 0;\r\n        this.iterateOverRowsCols((row, col) => {\r\n            if (!finishedBoard[row][col]) {\r\n                finishedBoard[row][col] = randomizeBoard[index];\r\n                index++;\r\n            }\r\n\r\n            finishedBoard[row][col] = {\r\n                ...finishedBoard[row][col],\r\n                index: this.posToArrIndex({ x: col, y: row }, cols),\r\n                numBombs: 0,\r\n            };\r\n        });\r\n\r\n\r\n        this.calculateBombNumberForEachTile(finishedBoard, rows, cols);\r\n\r\n        return [].concat(...finishedBoard);\r\n    }\r\n\r\n    iterateOverNeighbors(pos, callback) {\r\n        for (let xDelta = -1; xDelta <= 1; xDelta++) {\r\n            for (let yDelta = -1; yDelta <= 1; yDelta++) {\r\n                const coords = { x: pos.x + xDelta, y: pos.y + yDelta };\r\n                if (coords.x < 0 || coords.x >= this.cols) {\r\n                    continue;\r\n                }\r\n                if (coords.y < 0 || coords.y >= this.rows) {\r\n                    continue;\r\n                }\r\n                callback(coords);\r\n            }\r\n        }\r\n    }\r\n\r\n    iterateOverRowsCols(callback) {\r\n        for (let row = 0; row < this.rows; row++) {\r\n            for (let col = 0; col < this.cols; col++) {\r\n                callback(row, col);\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateBombNumberForEachTile(finishedBoard, rows, cols) {\r\n        this.iterateOverRowsCols((row, col) => {\r\n            if (!isBomb(finishedBoard[row][col])) {\r\n                return;\r\n            }\r\n            const pos = { x: col, y: row };\r\n\r\n            this.iterateOverNeighbors(pos, (coords) => {\r\n                finishedBoard[coords.y][coords.x].numBombs += 1;\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n\r\n    posToArrIndex(pos, cols) {\r\n        return pos.y * cols + pos.x;\r\n    }\r\n\r\n    isCorner(pos, rows, cols) {\r\n        return this.numEdgesOfPos(pos, rows, cols) === 2;\r\n    }\r\n\r\n    numEdgesOfPos(pos, rows, cols) {\r\n        const left = pos.y === 0;\r\n        const right = pos.y === cols - 1;\r\n        const top = pos.x === 0;\r\n        const bottom = pos.x === rows - 1;\r\n\r\n        let total = 0;\r\n        if (left || right) total++;\r\n        if (top || bottom) total++;\r\n\r\n        return total;\r\n    }\r\n\r\n    isOnAnEdge(pos, rows, cols) {\r\n        return this.numEdgesOfPos(pos, rows, cols) > 0;\r\n    }\r\n\r\n\r\n\r\n    indexToPos(index, cols) {\r\n        const y = Math.trunc(index / cols);\r\n        const x = index - y * cols;\r\n\r\n        return { x: x, y: y };\r\n    }\r\n\r\n    // setupGame(initialClick) {\r\n    //     return createBoard(10, 10, 15, this.indexToPos(initialClick));\r\n    // }\r\n\r\n    clickTile(tile) {\r\n        this.openNonBombNeighbors(tile);\r\n    }\r\n\r\n    flagTile(tile) {\r\n        const curr = this.board[tile.index];\r\n        const flaggedState = curr.isFlagged;\r\n        curr.isFlagged = !flaggedState;\r\n    }\r\n\r\n    indexWithinBounds(index) {\r\n        return index >= 0 && index < this.rows * this.cols;\r\n    }\r\n\r\n    isFlagged(index) {\r\n        return this.board[index].isFlagged;\r\n    }\r\n\r\n    neighborsWithFlags(tile) {\r\n        let numFlagged = 0;\r\n        this.iterateOverNeighbors(this.indexToPos(tile.index, this.cols), (coords) => {\r\n            const index = this.posToArrIndex(coords, this.cols);\r\n            if (this.isFlagged(index)) {\r\n                numFlagged++;\r\n            }\r\n        });\r\n\r\n        return numFlagged;\r\n    }\r\n\r\n    openNeighbors(tileToOpen) {\r\n        const numFlagged = this.neighborsWithFlags(tileToOpen);\r\n        const pos = this.indexToPos(tileToOpen.index, this.cols);\r\n\r\n        if (numFlagged === tileToOpen.numBombs) {\r\n\r\n            this.iterateOverNeighbors(pos, (coords) => {\r\n                const index = this.posToArrIndex(coords, this.cols);\r\n\r\n                if (this.indexWithinBounds(index)) {\r\n                    const tile = this.board[index];\r\n                    if (this.isFlagged(index)) {\r\n                        return;\r\n                    }\r\n                    if (tile.isOpened) {\r\n                        return;\r\n                    }\r\n                    this.clickTile(tile);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    decrementUsed(index) {\r\n        if (!this.opened.has(index)) {\r\n            this.remaining--;\r\n        }\r\n        this.opened.add(index);\r\n        if (this.opened.size === this.nonBombs) {\r\n            alert('WIN!');\r\n        }\r\n    }\r\n\r\n    openNonBombNeighbors(tileToOpen) {\r\n        if (tileToOpen.type === 'bomb') {\r\n            alert('loss!');\r\n            return;\r\n        }\r\n        const pos = this.indexToPos(tileToOpen.index, this.cols);\r\n        if (tileToOpen.isOpened) {\r\n            return;\r\n        }\r\n        this.board[tileToOpen.index].isOpened = true;\r\n\r\n        this.decrementUsed(tileToOpen.index);\r\n\r\n        if (tileToOpen.numBombs && tileToOpen.numBombs > 0) {\r\n            return;\r\n        }\r\n\r\n        this.iterateOverNeighbors(pos, (coords) => {\r\n            const tileToOpen = this.board[this.posToArrIndex(coords, this.cols)];\r\n            if (isBomb(tileToOpen)) {\r\n                return;\r\n            }\r\n\r\n            this.openNonBombNeighbors(tileToOpen);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nfunction genNonBombs(numTiles, includeIndex, toInsert) {\r\n    const tiles = [];\r\n\r\n\r\n    for (let count = 0; count < numTiles; count++) {\r\n        tiles.push({\r\n            ...toInsert,\r\n            index: count,\r\n        });\r\n    }\r\n\r\n    return tiles;\r\n}\r\n\r\nfunction genBombs(numBombs) {\r\n    const bombs = [];\r\n\r\n    for (let count = 0; count < numBombs; count++) {\r\n        bombs.push(bombTile);\r\n    }\r\n\r\n    return bombs;\r\n}\r\n\r\nexport default MinesweeperGame;","export function shuffle(arr) {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport function capitalize(s) {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase();\r\n}","/* eslint-disable react/prop-types */\r\n/* eslint-disable complexity */\r\nimport React from 'react';\r\nimport Tile from './Minesweeper/Tile';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {\r\n    getBoard,\r\n    getIsSet,\r\n    getGame,\r\n    plsRerender,\r\n    getGameMode,\r\n    getGameDifficulty,\r\n\r\n} from './selectors';\r\nimport { initializeBoard, updateBoard, removeCachedBoard, initializeTimer, updateTimer, toggleGameMode, setGameDifficulty } from './actions';\r\n\r\nimport MinesweeperGame from './Minesweeper/Minesweeper';\r\nimport './Game.css';\r\n\r\nlet stop = false;\r\nlet emptyBoard = null;\r\n\r\nlet first = true;\r\nconst secondInMilli = 1000;\r\n\r\nconst Game = ({\r\n    // state\r\n    board, game, isSet, gameMode, gameDifficulty,\r\n    // actions\r\n    performInitialSetup, updateBoard, setStartTime, updateTimer, toggleGameMode,\r\n}) => {\r\n\r\n    const GameWrapper = styled.div`\r\n        display: inline-grid;\r\n        grid-template-columns: repeat(${gameDifficulty.cols},1fr);\r\n    `;\r\n\r\n    emptyBoard = new MinesweeperGame({\r\n        ...gameDifficulty,\r\n        numBombs: 0,\r\n    }, null);\r\n\r\n    if (first && isSet) {\r\n        window.addEventListener('keydown', (event) => {\r\n            if (event.key === 'F' || event.key === 'f') {\r\n                toggleGameMode();\r\n            }\r\n        }, false);\r\n        first = false;\r\n    }\r\n    const visibleBoard = isSet ? board : emptyBoard.board;\r\n\r\n\r\n    const initialTileClick = (tile) => {\r\n        stop = false;\r\n        const newGame = new MinesweeperGame(gameDifficulty, tile.index);\r\n        performInitialSetup(newGame);\r\n        const timerInterval = setInterval(() => {\r\n            updateTimer(new Date());\r\n            if (stop) {\r\n                clearInterval(timerInterval);\r\n            }\r\n        }, secondInMilli);\r\n\r\n        setStartTime(new Date(), timerInterval);\r\n    };\r\n\r\n    const bombClick = () => {\r\n        console.log('LOSS!');\r\n    };\r\n\r\n    const unopenedTileClick = (tile) => {\r\n        game.clickTile(tile);\r\n        updateBoard(game.board);\r\n    };\r\n\r\n    const flagClick = (tile) => {\r\n        game.flagTile(tile);\r\n        updateBoard(game.board);\r\n    };\r\n\r\n    const openNeighbors = (tile) => {\r\n        game.openNeighbors(tile);\r\n        updateBoard(game.board);\r\n    };\r\n\r\n    function isClicked(tile) {\r\n        if (tile && tile.isOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    return <div>\r\n        <GameWrapper>\r\n            {\r\n                visibleBoard.map((tile) => {\r\n                    return <Tile\r\n                        key={tile.index}\r\n                        tile={tile}\r\n                        gameMode={gameMode}\r\n                        click={\r\n                            (tile) => {\r\n                                if (!isSet) {\r\n                                    initialTileClick(tile);\r\n                                    return;\r\n                                }\r\n\r\n                                if (isClicked(tile)) {\r\n                                    openNeighbors(tile);\r\n                                    return;\r\n                                }\r\n\r\n                                if (gameMode === 'flagging') {\r\n                                    flagClick(tile);\r\n                                    return;\r\n                                }\r\n\r\n                                if (tile.isFlagged) {\r\n                                    return;\r\n                                }\r\n                                if (tile.type === 'bomb') {\r\n                                    bombClick(tile);\r\n                                    return;\r\n                                }\r\n\r\n                                unopenedTileClick(tile);\r\n                            }\r\n                        }\r\n                    />;\r\n                })\r\n            }\r\n        </GameWrapper>\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    board: getBoard(state),\r\n    isSet: getIsSet(state),\r\n    game: getGame(state),\r\n    rerender: plsRerender(state),\r\n    gameMode: getGameMode(state),\r\n    gameDifficulty: getGameDifficulty(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    performInitialSetup: (newGame) => dispatch(initializeBoard(newGame)),\r\n    updateBoard: (tile) => dispatch(updateBoard(tile)),\r\n    removeCachedBoard: () => dispatch(removeCachedBoard()),\r\n    setStartTime: (startTime, interval) => dispatch(initializeTimer(startTime, interval)),\r\n    updateTimer: (now) => dispatch(updateTimer(now)),\r\n    toggleGameMode: () => dispatch(toggleGameMode()),\r\n    localRemoveCachedBoard: () => dispatch(removeCachedBoard()),\r\n    setDifficulty: (newDifficulty) => dispatch(setGameDifficulty(newDifficulty)),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","/* eslint-disable react/prop-types */\r\n/* eslint-disable complexity */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeCachedBoard, toggleGameMode, setGameDifficulty } from './actions';\r\nimport './Game.css';\r\nimport StatusBar from './StatusBar';\r\n\r\n\r\nimport Game from './Game';\r\nimport { getInGame } from './selectors';\r\n\r\nconst GameDisplay = ({\r\n    localRemoveCachedBoard, setDifficulty, toggleGameMode, inGame\r\n}) => {\r\n\r\n    // localRemoveCachedBoard();\r\n    return <div style={{ display: inGame ? \"\": \"none\"}} >\r\n        <StatusBar toggleGameMode={toggleGameMode} localRemoveCachedBoard={localRemoveCachedBoard} setGameDifficulty={setDifficulty} />\r\n        <Game />\r\n    </div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inGame: getInGame(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    toggleGameMode: () => dispatch(toggleGameMode()),\r\n    localRemoveCachedBoard: () => dispatch(removeCachedBoard()),\r\n    setDifficulty: (newDifficulty) => dispatch(setGameDifficulty(newDifficulty)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameDisplay);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport {\r\n    getGame,\r\n    getGameInSetupMode,\r\n    getInMainMenu,\r\n} from './selectors';\r\nimport { setupNewGame, continueGame } from './actions';\r\n\r\nconst MainMenu = ({ game, inSetupMode, setupNewGame, inMainMenu, continueGame }) => {\r\n    const MainMenuContainer = styled.div`\r\n        display:${!!inSetupMode ? \"none\" : \"inline-grid\"};\r\n    `;\r\n\r\n    const continuePreviousGame = (game.board.length !== 0);\r\n\r\n    return <div style={{ display: inMainMenu ? \"\" : \"none\" }}>\r\n\r\n        <MainMenuContainer>\r\n\r\n            <button style={{ display: `${continuePreviousGame ? \"\" : \"none\"}` }} onClick={() => {\r\n                continueGame();\r\n            }}>Continue Game </button>\r\n\r\n            <button onClick={() => {\r\n                setupNewGame();\r\n            }}>New Game</button>\r\n\r\n            <button>Settings </button>\r\n            <button>How To Play </button>\r\n        </MainMenuContainer>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    game: getGame(state),\r\n    inMainMenu: getInMainMenu(state),\r\n    inSetupMode: getGameInSetupMode(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setupNewGame: () => dispatch(setupNewGame()),\r\n    continueGame: () => dispatch(continueGame()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainMenu);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LogoContainer = styled.div`\r\n\r\n`;\r\n\r\nconst LogoText = styled.p`\r\n`;\r\n\r\nconst Logo = () =>(\r\n    <LogoContainer>\r\n        <LogoText>Lorne's Minesweeper</LogoText>\r\n    </LogoContainer>\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { EASY, MEDIUM, HARD, DIFFICULTIES } from './Constants';\r\nimport { removeCachedBoard, setGameDifficulty } from './actions';\r\nimport {\r\n    getGameInSetupMode,\r\n} from './selectors';\r\n\r\nimport {capitalize} from './utils'\r\n\r\nconst NewGameMenu = ({ localRemoveCachedBoard, setGameDifficulty, inSetupMode }) => {\r\n\r\n    console.log(inSetupMode)\r\n    console.log(inSetupMode ? \"inline-grid\" : \"none\");\r\n\r\n    const NewGameMenuContainer = styled.div`\r\n        display: ${inSetupMode ? \"inline-grid\" : \"none\"};\r\n    `;\r\n\r\n    const startNewGame = () => {\r\n        localRemoveCachedBoard();\r\n\r\n        const gameDifficultySelector = document.querySelectorAll('input[name=\\'gameDifficulty\\']');\r\n        let selectedValue;\r\n        for (const difficultyOption of gameDifficultySelector) {\r\n            if (difficultyOption.checked) {\r\n                selectedValue = difficultyOption.value;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let gameDifficulty = EASY;\r\n\r\n        if (selectedValue === 'medium') {\r\n            gameDifficulty = MEDIUM;\r\n        } else if (selectedValue === 'hard') {\r\n            gameDifficulty = HARD;\r\n        }\r\n\r\n        setGameDifficulty(gameDifficulty);\r\n    }\r\n\r\n    return <NewGameMenuContainer>\r\n        {\r\n            Object.keys(DIFFICULTIES).map((key) => {\r\n                const difficulty = DIFFICULTIES[key];\r\n                const msg = `${capitalize(key)} (${difficulty.rows} x ${difficulty.cols}, ${difficulty.numBombs} mines)`\r\n                return <div>\r\n                    <input type='radio' id={{ key }} name='gameDifficulty' value={{ key }} />\r\n                    <label htmlFor={{ key }}>{msg}</label>\r\n                </div>\r\n            })\r\n        }\r\n        {/* <div>\r\n            <input type='radio' id='easy' name='gameDifficulty' value='easy' />\r\n            <label htmlFor='easy'>Easy (9 x 9, 10 mines) </label>\r\n        </div>\r\n        <div>\r\n            <input type='radio' id='medium' name='gameDifficulty' value='medium' />\r\n            <label htmlFor='medium'>Medium (16 x 16, 40 mines)</label>\r\n        </div>\r\n        <div>\r\n            <input type='radio' id='hard' name='gameDifficulty' value='hard' />\r\n            <label htmlFor='hard'>Hard (16 x 30, 99 mines)</label>\r\n        </div> */}\r\n        <button onClick={startNewGame}>Start Game </button>\r\n    </NewGameMenuContainer>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inSetupMode: getGameInSetupMode(state),\r\n});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    localRemoveCachedBoard: () => dispatch(removeCachedBoard()),\r\n    setGameDifficulty: (newDifficulty) => dispatch(setGameDifficulty(newDifficulty)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewGameMenu);","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport GameDisplay from './GameDisplay';\r\nimport { connect } from 'react-redux';\r\nimport { pageLoadedSetup } from './actions'\r\nimport './App.css';\r\nimport MainMenu from './MainMenu';\r\nimport Logo from './Logo';\r\nimport { getInMainMenu } from './selectors';\r\nimport NewGameMenu from './NewGameMenu';\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.pageLoadedSetup();\r\n    }\r\n    render() {\r\n\r\n        return <div className=\"App-Wrapper\">\r\n            <div className=\"App\">\r\n                <Logo />\r\n                {/* Page State of App */}\r\n                <MainMenu />\r\n                <NewGameMenu />\r\n                <GameDisplay />\r\n                \r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inMainMenu: getInMainMenu(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    pageLoadedSetup: () => dispatch(pageLoadedSetup()),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './store';\r\nimport App from './App.js';\r\n\r\n\r\nconst store = configureStore();\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate\r\n            loading={<div>Loading...</div>}\r\n            persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root'));"],"sourceRoot":""}